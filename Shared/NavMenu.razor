@using Microsoft.AspNetCore.Components.Routing
@using TicTacToe.Data
@inject NavigationManager Nav
@inject IJSRuntime JS
@inject GameService Service

@if (IsLoggedIn)
{
    <button class="menu-toggle" @onclick="ToggleMenu">☰</button>
}

@if (IsLoggedIn && IsMenuOpen)
{
    <div class="menu-overlay" @onclick="FecharMenu"></div>
    <div class="@CssClass">
        <ul>
            <li>
                <NavLink href="/lobby" @onclick="FecharMenu">Lobby</NavLink>
            </li>
            <li>
                <NavLink href="/ranking" @onclick="FecharMenu">Ranking</NavLink>
            </li>
            <li>
                <NavLink @onclick="Logout">Sair</NavLink>
            </li>
        </ul>
    </div>
}

<style>
    .menu-toggle {
        display: block;
        position: fixed;
        top: 10px;
        left: 10px;
        font-size: 1.5rem;
        background: var(--secondary-color);
        color: #fff;
        border: none;
        padding: 8px 12px;
        border-radius: 4px;
        cursor: pointer;
        z-index: 1001;
    }

    .nav-menu {
        width: 250px;
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        background: var(--primary-color);
        padding: 70px 10px 20px;
        z-index: 1002;
        overflow-y: auto;
        color: #fff;
    }

        .nav-menu ul {
            list-style: none;
            padding: 0;
        }

        .nav-menu li {
            margin-bottom: 16px;
        }

        .nav-menu a,
        .nav-menu button {
            display: block;
            width: 100%;
            color: #fff;
            font-weight: 500;
            padding: 8px 12px;
            text-decoration: none;
            background: transparent;
            border: none;
            text-align: left;
            border-radius: 4px;
            cursor: pointer;
        }

            .nav-menu a.active,
            .nav-menu a:hover,
            .nav-menu button:hover {
                background: var(--secondary-color);
            }

    .menu-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.3);
        z-index: 1000;
    }
</style>

@code {
    [Parameter] public string CssClass { get; set; } = "nav-menu";
    private bool IsLoggedIn { get; set; } = false;
    private bool IsMenuOpen { get; set; } = false;

    protected override void OnInitialized()
    {
        Service.StateChanged += OnServiceStateChanged;
    }

    private void OnServiceStateChanged()
    {
        InvokeAsync(CheckUserName);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await CheckUserName();
        }
    }

    private async Task CheckUserName()
    {
        var username = await JS.InvokeAsync<string>("localStorage.getItem", "username");
        IsLoggedIn = !string.IsNullOrEmpty(username);
        StateHasChanged();
    }

    private async Task Logout()
    {
        await JS.InvokeVoidAsync("localStorage.removeItem", "username");
        IsLoggedIn = false;
        IsMenuOpen = false;
        Nav.NavigateTo("/");
    }

    private void ToggleMenu()
    {
        IsMenuOpen = !IsMenuOpen;
    }

    private void FecharMenu()
    {
        IsMenuOpen = false;
    }
}